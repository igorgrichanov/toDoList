name: toDoList

services:
  app:
    build: .
    image: toDoList-app
    env_file:
      - .env.example
    container_name: app
    ports:
      - "8080:8080"
    networks:
      - local
    pull_policy: never
    depends_on:
      migrate:
        condition: service_completed_successfully
  migrate:
    image: migrate/migrate
    container_name: migrate
    networks:
      - local
    volumes:
      - ./migrations:/migrations
    command:
      [
        "-path", "/migrations",
        "-database", "postgres://${DB_USER}:${DB_PASSWORD}@${DB_HOST}:${DB_PORT}/${DB_NAME}?sslmode=disable",
        "up"
      ]
    depends_on:
      db:
        condition: service_healthy
  db:
    image: postgres
    restart: unless-stopped
    ports:
      - "5432:5432"
    environment:
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_USER: ${DB_USER}
      POSTGRES_DB: ${DB_NAME}
    volumes:
      - ./scripts/pg_health.sh:/usr/local/bin/pg_health.sh:ro
    networks:
      - local
    healthcheck:
      test: [ "CMD", "/usr/local/bin/pg_health.sh" ]
      interval: 5s
      retries: 3
      start_period: 10s
      timeout: 5s
  pgadmin:
    image: dpage/pgadmin4
    container_name: pgadmin
    restart: unless-stopped
    ports:
      - "5050:80"
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_EMAIL}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_PASSWORD}
    networks:
      - local
networks:
  local:
    driver: bridge